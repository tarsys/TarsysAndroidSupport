apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'

def libraryVersionId = 1000
def libraryVersionCode='1.0.0.0'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'TaRSySAndroidSupport'
    publishedGroupId = 'com.github.tarsys.android'
    libraryName = 'support'
    artifact = 'support'
    libraryDescription = 'Some utilities (i.e. intuitive Authenticator) for android development'
    siteUrl = 'http://tarsys.github.io/TaRSySAndroidSupport/'
    gitUrl = 'https://github.com/tarsys/TaRSySAndroidSupport.git'

    libraryVersion = libraryVersionCode

    developerId = 'tarsys'
    developerName = 'Antonio Fdez. A.'
    developerEmail = 'tarsysdev@gmail.com'
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode libraryVersionId
        versionName libraryVersionCode
    }
    buildTypes {
        debug {
            debuggable true
        }
    }
}

def TarsysAndroidSupportAarFile = file('build/androidsupport.aar')
artifacts {
    archives TarsysAndroidSupportAarFile
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:///Users/tarsys/Desarrollo/MavenRepo/aars")
            pom.groupId = 'com.github.tarsys.android'
            pom.artifactId = 'support'
            pom.version = '1.0.0.0'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.google.guava:guava:19.0'
    compile 'com.google.code.gson:gson:2.+'
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}